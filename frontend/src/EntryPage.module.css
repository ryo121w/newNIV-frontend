body {
  background-color: rgba(220, 220, 221, 0.735);
  height: 100%;
  width: 100%;

}

/* ===================================================== */




/* ===================================================== */
/* ロゴ */
.logo {
  width: auto;
  height: 50px;
}

.Entry-Logo {
  display: flex;
}

/* ===================================================== */



/* ===================================================== */
/* ヘッダーボタン */
.btn {
  font-size: 10px;
  font-weight: 700;
  padding: 20px;
  border-radius: 5px;
  border: none;
  background-color: rgba(200, 198, 198, 0.227);
}

.menu ul {
  list-style: none;
  display: flex;
}

.menu ul li {
  margin-right: 10px;
}

.menu ul li p {
  margin: 0px;
  font-size: 10px;
  font-weight: 600;
}

/* ===================================================== */



/* ===================================================== */
/* ヘッダーメニューアニメーション */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.menu-list:hover {
  transform: scale(1.05) translateX(-10px);
  transition: transform 0.3s;
}


.menu-list {
  animation-name: fadeInUp;
  animation-duration: 0.5s;
  animation-fill-mode: both;
}

.menu-list:nth-child(1) {
  animation-delay: 0.2s;
}

.menu-list:nth-child(2) {
  animation-delay: 0.4s;
}

.menu-list:nth-child(3) {
  animation-delay: 0.6s;
}

.menu-list:nth-child(4) {
  animation-delay: 0.8s;
}

/* ===================================================== */


/* ===================================================== */
/* ヘッダーボタンアニメーション */
@keyframes buttonFadeInDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}


.btn {
  animation-name: buttonFadeInDown;
  animation-duration: 0.5s;
  animation-fill-mode: both;
}

.btn:nth-child(1) {
  animation-delay: 0.1s;
}

.btn:nth-child(2) {
  animation-delay: 0.2s;
}

.btn:nth-child(3) {
  animation-delay: 0.3s;
}

.btn:nth-child(4) {
  animation-delay: 0.4s;
}

.btn:hover {
  transform: scale(1.05) translateX(-15px) !important;
  transition: transform 2.8s !important;
}

/* ===================================================== */


/* ===================================================== */
/* サイドボタン */
.button-container {
  display: flex;
  flex-direction: column;
  margin-top: 50px;
  position: fixed;
  right: 0;
  z-index: 1000;
}

.button-container button {
  margin-bottom: 10px;
}

/* ===================================================== */



/* ===================================================== */
.readme {
  width: 95%;
  margin: 0 auto;
}

.readme-title {
  font-weight: 900;

  padding: 5px;
  border-bottom: 1px solid#000000;
}

.readme-title:hover {
  color: rgb(34, 0, 255);
  /* 文字色 */
  border-color: rgb(34, 0, 255);
  /* ボーダーの色 */
}


/* アニメーションの初期設定 */
.readme-title span {
  transition: color 0.5s;
  color: black;

}

/* ホバー時のアニメーション効果 */
.readme-title:hover span:nth-child(1) {
  transition-delay: 0.1s;
  color: rgb(34, 0, 255);
  /* 文字色を変更 */
  border-color: rgb(34, 0, 255);
  /* ボーダーの色を変更 */
}

.readme-title:hover span:nth-child(2) {
  transition-delay: 0.2s;
  color: rgb(34, 0, 255);
}

.readme-title:hover span:nth-child(3) {
  transition-delay: 0.3s;
  color: rgb(34, 0, 255);
}

.readme-title:hover span:nth-child(4) {
  transition-delay: 0.4s;
  color: rgb(34, 0, 255);
}

.readme-title:hover span:nth-child(5) {
  transition-delay: 0.5s;
  color: rgb(34, 0, 255);
}

.readme-title:hover span:nth-child(6) {
  transition-delay: 0.6s;
  color: rgb(34, 0, 255);
}

/* 以下、必要な数だけ繰り返します。 */
.readme-abs {
  text-align: center;
  margin-bottom: 60px;
}



.readme-logo {
  width: 200px;
}

.readme-niv {
  margin-top: 0px;
}

.readme-info h2 {
  margin-bottom: 0px;
}

.readme-info h3 {
  font-size: 15px;
  font-weight: 800;
  margin-top: 0px;
}


.readme-ex {
  display: flex;
  justify-content: center;
}

.readme-nir {
  border-radius: 50px;
  padding: 40px;

  margin-right: 10px;
  text-align: center;
  background-image: url('../public/images/NIVBack.gif');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  transition: transform 0.3s ease-in-out;
  /* 他のスタイル設定もこちらに追加 */
}

.readme-nir:hover {
  transform: translateY(-10px);
  /* ホバー時に要素を10ピクセル上に移動 */
}


.readme-nir ul {
  padding: 0px;
}

.readme-nir ul li {
  list-style: none;
  text-align: left;
  font-size: 15px;
  font-weight: 900;
}

.readme-fuv {
  border-radius: 50px;
  padding: 40px;
  background-image: url('../public/images/FUVBack.gif');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center;
  margin-left: 10px;
  text-align: center;
  transition: transform 0.3s ease-in-out;
}


.readme-fuv:hover {
  transform: translateY(-10px);
  /* ホバー時に要素を10ピクセル上に移動 */
}

.readme-fuv ul {
  padding: 0px;
}

.readme-fuv ul li {
  list-style: none;
  text-align: left;
  font-size: 15px;
  font-weight: 900;
}



.readme-github a {
  color: black;
  /* リンクの色を黒に設定 */
  text-decoration: none;
  /* 下線を削除 */
}

.readme-github a:hover {
  color: black;
  /* ホバー時の色も黒に設定 */
}

/* ===================================================== */
/* バックグラウンドイメージ */
.backgroundImage {
  background-image: url('../public/Welcom\ To\ NIV..png');
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center 50px;
  height: 650px;
  /* 画面の高さに合わせる */
  width: 100vw;
  /* 画面の幅に合わせる */
}

/* ===================================================== */

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* fadeInUpクラスのスタイル定義 */
.fadeInUp {
  /* アニメーション初期状態などのスタイル */
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s, transform 0.5s;
}



.fadeInUp.visible {
  /* ビューポート内に入った時のスタイル */
  opacity: 1;
  transform: translateY(0);
}

.Title {
  animation-delay: 0.2s;
}

.Title h1 {
  margin-top: 0px;
}






.static-list {
  font-weight: 700;
  animation-delay: 0.4s;
}

.video-ex {
  color: #535353;
  font-size: 8px;
  font-weight: 600;
  animation-delay: 0.8s;
}

.wrapper {
  background-image: url('../public/images/StaticBackground.gif');
  background-repeat: no-repeat;
  background-position: center center;
  background-attachment: fixed;
  /* これにより背景画像が固定されます */
  background-size: cover;
}

.Static ul {
  padding-left: 0px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}


.Static ul li {
  list-style: none;
}





/* ===================================================== */
/* ビデオ */
.video video {
  max-width: 100%;
  /* 最大幅を100%に設定して、親要素を超えないようにします */
  max-height: 100%;
  height: auto;
  /* アスペクト比を維持 */
  border-radius: 10px;
  /* 必要に応じてボーダーラジウスを追加 */
  background-color: #4F19FD;
  padding: 40px;
  margin: 0;
}

.video {


  display: flex;
  flex-direction: column;
  position: relative;
  justify-content: center;
  align-items: center;
  width: 100%;
  border-radius: 10px;
  z-index: 1;
  padding: 0;
  margin-bottom: 40px;

}

.video-container {
  margin-bottom: 30px;
  display: flex;
  flex-direction: column;
  justify-content: center;
  /* 水平方向の中央寄せ */
  align-items: center;
  /* 垂直方向の中央寄せ */
  width: 80vw;
  /* video-containerの幅を指定。必要に応じて調整してください */

  /* 背景色をここに追加 */
  border-radius: 10px;
  position: relative;


}

/* ===================================================== */

/* ===================================================== */
/* ビデオアニメーション */
@keyframes slideIn {
  from {
    transform: translateY(-20px);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

.video-hidden {
  opacity: 0;
  visibility: hidden;
  max-height: 0;
  overflow: hidden;
  transform: translateY(-20px);
  /* 初期位置を少し上に設定 */
  transition: opacity 0.5s ease-out, max-height 0.5s ease-out, transform 0.5s ease-out;
  /* transformの変化にもアニメーションを追加 */
}

.video-visible {
  opacity: 1;
  visibility: visible;
  max-height: 500px;
  /* 例: 500px, ビデオの本来の最大高さに設定 */
  transform: translateY(0);
  /* 終了位置を通常の位置に設定 */
  animation: slideIn 0.5s forwards;
  /* アニメーションを適用 */
  transition: opacity 0.5s ease-in, max-height 0.5s ease-in, transform 0.5s ease-in;
  /* transformの変化にもアニメーションを追加 */
}

/* ===================================================== */


/* ===================================================== */
/* ビデオ再生ボタン */
.play-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: transparent;
  border: none;
  cursor: pointer;
  z-index: 2;
}

.play-button img {
  width: 30px;
  /* または適切なサイズ */
  height: 30px;
  /* または適切なサイズ */
}

/* ===================================================== */